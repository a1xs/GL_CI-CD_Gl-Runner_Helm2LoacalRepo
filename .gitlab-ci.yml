---

workflow:
  rules:
    - if: '$CI_MERGE_REQUEST_IID'
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'

variables:
  SOURCE_HELM_REPO: "https://charts.gitlab.io"
  DESTINATION_HELM_REPO: "https://gitlab.codeinside.ru/api/v4/projects/${CI_PROJECT_ID}/packages/helm/stable"
  APP: "gitlab-runner"

## PIPELINE DEFINITION
stages:
  - package
  - upload

#### PACKAGE SECTION
package-main:
  stage: package
  image:
    name: $HELM_IMAGE
    entrypoint: [ "" ]
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
    - when: never
  artifacts:
    paths:
      - ${APP}-*.tgz
    reports:
      dotenv: build.env
  before_script:
    - helm repo add gitlab ${SOURCE_HELM_REPO}
    - SOURCE_REPO=$(helm search repo gitlab/gitlab-runner --versions | head -n2 | awk '{print $2}' | tail -n1) && echo "SOURCE_REPO=$SOURCE_REPO" >> build.env
    - helm repo add --username package --password ${TOKEN} local-gitlab-runner ${DESTINATION_HELM_REPO}
    - helm repo update
    - DESTINATION_REPO=$(helm search repo local-gitlab-runner/gitlab-runner --versions | head -n2 | awk '{print $2}' | tail -n1)
  script:
    - |
      if [[ "${SOURCE_REPO}" > "${DESTINATION_REPO}" ]]; then
        echo "New version ${SOURCE_REPO}"
        helm pull gitlab/gitlab-runner
        ls -- ${APP}-*.tgz
      else
        echo "There is no new version yet."
      fi

#### UPLOAD SECTION
upload-to-package-registry:
  stage: upload
  image: $ALPINE_IMAGE
  dependencies:
    - package-main
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
    - when: never
  script:
    - apk update && apk add curl
    - echo ${SOURCE_REPO}
    - |
        tgz_files=$(find . -name "*.tgz")

        if [ -n "$tgz_files" ]; then
          echo "New helm ${tgz_files}"
          curl --request POST --user gitlab-ci-token:$CI_JOB_TOKEN --form "chart=@${APP}-${SOURCE_REPO}.tgz" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/stable/charts"
        else
          echo "There is no new version yet."
        fi
